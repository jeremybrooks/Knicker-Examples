/*
 * Copyright 2011 Jeremy Brooks. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted with no restriction.
 *
 */

package net.jeremybrooks.knickerexamples;

import java.io.ByteArrayInputStream;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import javazoom.jl.player.Player;
import net.jeremybrooks.knicker.dto.Definition;
import org.apache.log4j.BasicConfigurator;
import org.apache.log4j.Logger;

/**
 * 
 * @author jeremyb
 */
public class MainWindow extends javax.swing.JFrame implements Observer {


    private Logger logger = Logger.getLogger(MainWindow.class);

    /** The audio data to play. */
    private byte[] audio;
    
    /** Creates new form MainWindow */
    public MainWindow() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtWord = new javax.swing.JTextField();
        btnDefine = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDefinition = new javax.swing.JTextPane();
        btnAudio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Word:");

        txtWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWordActionPerformed(evt);
            }
        });

        btnDefine.setText("Define");
        btnDefine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefineActionPerformed(evt);
            }
        });

        txtDefinition.setContentType("text/html");
        txtDefinition.setEditable(false);
        jScrollPane1.setViewportView(txtDefinition);

        btnAudio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sound.png"))); // NOI18N
        btnAudio.setEnabled(false);
        btnAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAudioActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(btnDefine)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnAudio))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtWord, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtWord, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(7, 7, 7)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(btnAudio)
                    .add(btnDefine))
                .add(9, 9, 9)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWordActionPerformed
	// TODO add your handling code here:
    }//GEN-LAST:event_txtWordActionPerformed

    private void btnDefineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefineActionPerformed
	String word = this.txtWord.getText();
	if (word == null || word.trim().isEmpty()) {
	    JOptionPane.showMessageDialog(this, "Please enter a word to look up.",
		    "No Word", JOptionPane.INFORMATION_MESSAGE);
	} else {
	    this.btnAudio.setEnabled(false);
	    this.txtDefinition.setText("Looking up <i>" + word + "</i>....");
	    word = word.trim();
	    try {
		(new Lookup(word)).execute();
		(new LookupAudio(word)).execute();
	    } catch (Exception e) {
		logger.error("Something went wrong while looking up the word.", e);
	    }
	}
    }//GEN-LAST:event_btnDefineActionPerformed

    private void btnAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAudioActionPerformed
	ByteArrayInputStream in = null;
	Player player = null;
	try {
	    logger.info("There are " + this.audio.length + " bytes of audio to play.");
	    in = new ByteArrayInputStream(this.audio);
	    player = new Player(in);
	    player.play();
	} catch (Exception e) {
	    logger.error("Error while playing audio data.", e);
	    JOptionPane.showMessageDialog(this,
		    "Error playing audio: " + e.getMessage(),
		    "Could not play audio",
		    JOptionPane.ERROR_MESSAGE);
	} finally {
	    if (in != null) {
		try {
		    in.close();
		} catch (Exception e) {
		    logger.warn("Error while closing input stream.", e);
		}
	    }
	}
    }//GEN-LAST:event_btnAudioActionPerformed

    public void update(Observable o, Object arg) {
	if (arg instanceof byte[]) {
	    this.audio = (byte[])arg;
	    this.btnAudio.setEnabled(true);

	    try {
		java.io.FileOutputStream out = new java.io.FileOutputStream(new java.io.File("/Users/jeremyb/Desktop/audio.mp3"));
		out.write(audio);
		out.flush();
		out.close();
	    } catch (Exception e) {
		logger.error("Error writing file.", e);
	    }
	    
	} else if (arg instanceof List<?>) {
	    try {
		@SuppressWarnings("unchecked")
		List<Definition> defList = (List<Definition>)arg;

		if (defList.isEmpty()) {
		    this.txtDefinition.setText("Could not find definition for <i>"
			    + this.txtWord.getText() + "</i>.");
		} else {
		    StringBuilder sb = new StringBuilder("<html><body><h1>");
		    sb.append(this.txtWord.getText()).append("</h1>");

		    int i = 1;
		    for (Definition def : defList) {
			sb.append("<p><b>").append(i++).append(".</b> ");
			sb.append("<i>").append(def.getPartOfSpeech()).append(": </i>");
			sb.append(def.getText());
		    }

		    sb.append("</body></html>");

		    this.txtDefinition.setText(sb.toString());
		    this.txtDefinition.setCaretPosition(0);
		 }
	    } catch(ClassCastException cce) {
		this.txtDefinition.setText("<b>Wrong list type returned.</b>");
	    }
	}
    }


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
		BasicConfigurator.configure();
		
		// Set Wordnik API key
		System.setProperty("WORDNIK_API_KEY", "");
                MainWindow window = new MainWindow();
		Notifier.getInstance().addObserver(window);
		window.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAudio;
    private javax.swing.JButton btnDefine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane txtDefinition;
    private javax.swing.JTextField txtWord;
    // End of variables declaration//GEN-END:variables




}
